/*
 * Query API
 * A list of get API calls that allows for pulling data
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.connectedhealth.idaas.datasynthesis.javaclient.api;

import io.connectedhealth.idaas.datasynthesis.javaclient.ApiException;
import io.connectedhealth.idaas.datasynthesis.javaclient.model.QueryResponseSharedFields;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * Retrieves abaBanking information
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAbaBankingInformationTest() throws ApiException {
                Object response = api.getAbaBankingInformation();
        // TODO: test validations
    }
    
    /**
     * Retrieves abaBanking information
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAbaBankingInformationWithStateCodeTest() throws ApiException {
        String statecode = null;
                Object response = api.getAbaBankingInformationWithStateCode(statecode);
        // TODO: test validations
    }
    
    /**
     * Retrieves data about area codes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAreaCodeWithStateCodeTest() throws ApiException {
        String statecode = null;
                Object response = api.getAreaCodeWithStateCode(statecode);
        // TODO: test validations
    }
    
    /**
     * Retrieves data about area codes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAreaCodesTest() throws ApiException {
                Object response = api.getAreaCodes();
        // TODO: test validations
    }
    
    /**
     * Retrieves data about companies
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCompaniesTest() throws ApiException {
                Object response = api.getCompanies();
        // TODO: test validations
    }
    
    /**
     * Retrieves data about companies
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCompaniesByCompanyNameTest() throws ApiException {
        String companyname = null;
                Object response = api.getCompaniesByCompanyName(companyname);
        // TODO: test validations
    }
    
    /**
     * Retrieves data domain information
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataDomainTest() throws ApiException {
                Object response = api.getDataDomain();
        // TODO: test validations
    }
    
    /**
     * Retrieves data about data tables
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDataModelDataTablesTest() throws ApiException {
                Object response = api.getDataModelDataTables();
        // TODO: test validations
    }
    
    /**
     * Retrieves data about firstnames
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFirstNameWithFirstNameAndGenderTest() throws ApiException {
        String firstnamelike = null;
        String gender = null;
                Object response = api.getFirstNameWithFirstNameAndGender(firstnamelike, gender);
        // TODO: test validations
    }
    
    /**
     * Retrieves data about firstnames
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFirstNameWithFirstNameLikeTest() throws ApiException {
        String likename = null;
                Object response = api.getFirstNameWithFirstNameLike(likename);
        // TODO: test validations
    }
    
    /**
     * Retrieves data about firstnames
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFirstNamesTest() throws ApiException {
                Object response = api.getFirstNames();
        // TODO: test validations
    }
    
    /**
     * Retrieves data about lastnames
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLastNameTest() throws ApiException {
                Object response = api.getLastName();
        // TODO: test validations
    }
    
    /**
     * Retrieves data about lastnames
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLastNameWithMatchTest() throws ApiException {
        String lastnamematch = null;
                Object response = api.getLastNameWithMatch(lastnamematch);
        // TODO: test validations
    }
    
    /**
     * Retrieves data about upc codes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUPCCodesTest() throws ApiException {
                Object response = api.getUPCCodes();
        // TODO: test validations
    }
    
    /**
     * Retrieves data about upc codes
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUPCCodesWithProductNameMatchTest() throws ApiException {
        String productnamematch = null;
                Object response = api.getUPCCodesWithProductNameMatch(productnamematch);
        // TODO: test validations
    }
    
    /**
     * Retrieves data about zipCodes in US
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getZipCodesUSTest() throws ApiException {
                Object response = api.getZipCodesUS();
        // TODO: test validations
    }
    
    /**
     * Retrieves data about zipCodes in US with State Code
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getZipCodesUSWithStateCodeTest() throws ApiException {
        String statecode = null;
                Object response = api.getZipCodesUSWithStateCode(statecode);
        // TODO: test validations
    }
    
}
